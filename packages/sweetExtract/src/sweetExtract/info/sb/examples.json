{
  "htmlchoice": [],
  "bandit": [
    {
      "filename": "bandit.py",
      "relpath": "docs/Stimuli/choice/bandit.py",
      "code": "from sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Bandit, Text\nfrom sweetbean.variable import (\n    DataVariable,\n    FunctionVariable,\n    SharedVariable,\n    SideEffect,\n    TimelineVariable,\n)\n\ntimeline = [\n    {\n        \"bandit_1\": {\"color\": \"orange\", \"value\": 10},\n        \"bandit_2\": {\"color\": \"blue\", \"value\": 0},\n        \"bandit_3\": {\"color\": \"red\", \"value\": 5},\n    },\n    {\n        \"bandit_1\": {\"color\": \"orange\", \"value\": 9},\n        \"bandit_2\": {\"color\": \"blue\", \"value\": 1},\n        \"bandit_3\": {\"color\": \"red\", \"value\": 5},\n    },\n    {\n        \"bandit_1\": {\"color\": \"orange\", \"value\": 8},\n        \"bandit_2\": {\"color\": \"blue\", \"value\": 2},\n        \"bandit_3\": {\"color\": \"red\", \"value\": 5},\n    },\n    {\n        \"bandit_1\": {\"color\": \"orange\", \"value\": 7},\n        \"bandit_2\": {\"color\": \"blue\", \"value\": 3},\n        \"bandit_3\": {\"color\": \"red\", \"value\": 5},\n    },\n    {\n        \"bandit_1\": {\"color\": \"orange\", \"value\": 6},\n        \"bandit_2\": {\"color\": \"blue\", \"value\": 4},\n        \"bandit_3\": {\"color\": \"red\", \"value\": 5},\n    },\n]\n\nbandit_1 = TimelineVariable(\"bandit_1\")\nbandit_2 = TimelineVariable(\"bandit_2\")\nbandit_3 = TimelineVariable(\"bandit_3\")\n\nscore = SharedVariable(\"score\", 0)\nvalue = DataVariable(\"value\", 0)\n\nupdate_score = FunctionVariable(\n    \"update_score\", lambda sc, val: sc + val, [score, value]\n)\n\nupdate_score_side_effect = SideEffect(score, update_score)\n\nbandit_task = Bandit(\n    bandits=[bandit_1, bandit_2, bandit_3],\n    side_effects=[update_score_side_effect],\n)\nshow_score = Text(duration=1000, text=score)\n\nblock = Block([bandit_task, show_score], timeline=timeline)\n\n# Create an image of the stimuli sequence of the block\nblock.to_image(\"bandit.png\", [{\"value\": 5}, None], zoom_factor=[1, 3])\n\n# Create HTML file of the experiment\nexperiment = Experiment([block])\nexperiment.to_html(\"bandit.html\")\n"
    }
  ],
  "foraging": [
    {
      "filename": "foraging.py",
      "relpath": "docs/Stimuli/foraging/foraging.py",
      "code": "from sweetbean.block import Block\nfrom sweetbean.experiment import Experiment\nfrom sweetbean.stimulus import Text\n\n# If you put the Foraging wrapper where we discussed:\nfrom sweetbean.stimulus.Foraging import Foraging\nfrom sweetbean.variable import TimelineVariable\n\n# --- Timeline with per-trial item arrays (targets/distractors) ---\n# Each item can define ONE of: html | text | shape | src\n# Optional: color, rotationDeg, pos, size, fontSize, id, attrs\ntimeline = [\n    {\n        \"targets\": [\n            {\"text\": \"O\", \"color\": \"blue\"},\n            {\"text\": \"O\", \"color\": \"blue\"},\n        ],\n        \"distractors\": [\n            {\"text\": \"O\", \"color\": \"red\"},\n            {\"text\": \"Q\", \"color\": \"blue\"},\n            {\"text\": \"Q\", \"color\": \"red\"},\n        ],\n        # blue Os\n    },\n    {\n        \"targets\": [\n            {\"shape\": \"square\", \"color\": \"red\"},\n            {\"shape\": \"square\", \"color\": \"blue\"},\n        ],\n        \"distractors\": [\n            {\"shape\": \"triangle\", \"color\": \"red\"},\n            {\"shape\": \"circle\", \"color\": \"blue\"},\n            {\"shape\": \"triangle\", \"color\": \"blue\"},\n        ],\n        # squares\n    },\n    {\n        \"targets\": [\n            {\"html\": \"<b>?</b>\", \"color\": \"red\"},\n            {\"html\": \"<b>!</b>\", \"color\": \"blue\"},\n        ],\n        \"distractors\": [\n            {\"html\": \"?\", \"color\": \"red\"},\n            {\"html\": \"!\", \"color\": \"blue\"},\n            {\"html\": \"!\", \"color\": \"blue\"},\n        ],\n        # bold punctuation\n    },\n    {\n        \"targets\": [\n            {\"src\": \"https://dummyimage.com/256x256/ffffff/000000&text=T1\"},\n            {\"src\": \"https://dummyimage.com/256x256/ffffff/000000&text=T2\"},\n        ],\n        \"distractors\": [\n            {\"src\": \"https://dummyimage.com/256x256/ffffff/000000&text=D1\"},\n            {\"src\": \"https://dummyimage.com/256x256/ffffff/000000&text=D2\"},\n            {\"src\": \"https://dummyimage.com/256x256/ffffff/000000&text=D3\"},\n        ],\n        # Ts\n    },\n]\n\n# Instruction screen before each foraging trial (like your Text “response window” in RSVP)\ninstructions = Text(\n    text=\"Collect ALL targets as fast as you can. \"\n    \"Distractors will jiggle. Tap/click targets to collect.\",\n    duration=1500,  # auto-advance after 1.5s\n)\n\n# Foraging stimulus:\n# - Defaults: random non-overlapping placement inside a centered arena,\n#   black bg, end_when_found=True, trial_duration=None.\nforaging = Foraging(\n    targets=TimelineVariable(\"targets\"),\n    distractors=TimelineVariable(\"distractors\"),\n)\n\n# Put them together\nstimulus_sequence = [instructions, foraging]\n\nblock = Block(stimulus_sequence, timeline=timeline)\nexp = Experiment([block])\n\n# Will use your HTML preamble (already loading @sweet-jspsych/plugin-foraging)\nexp.to_html(\"foraging.html\")\n"
    }
  ],
  "generic": [],
  "htmlkeyboardresponse": [],
  "text": [
    {
      "filename": "stroop.py",
      "relpath": "docs/Stimuli/text/stroop.py",
      "code": "\"\"\"\nA fixation cross is followed by a blank screen, followed by a Stroop stimulus, followed by another\nblank screen. The fixation cross is shown for 1000ms. The soa and iti durations are indicated by\nthe experimental design. The color of the Stroop task and its words are also indicated by the\nexperimental design. The correct response  to a red word is f, and the correct response to a\ngreen word is j.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Text\nfrom sweetbean.variable import DataVariable, FunctionVariable, TimelineVariable\n\ntimeline = [\n    {\"color\": \"red\", \"word\": \"RED\", \"so_s\": 200, \"so_f\": 1000},\n    {\"color\": \"green\", \"word\": \"GREEN\", \"so_s\": 1000, \"so_f\": 100},\n    {\"color\": \"green\", \"word\": \"RED\", \"so_s\": 100, \"so_f\": 2000},\n    {\"color\": \"red\", \"word\": \"GREEN\", \"so_s\": 1000, \"so_f\": 1000},\n]\n\n# EVENT SEQUENCE\n\ncolor = TimelineVariable(\"color\")\nword = TimelineVariable(\"word\")\nso_s_duration = TimelineVariable(\"so_s\")\nso_f_duration = TimelineVariable(\"so_f\")\n\n\ndef correct_key_fct(color, word):\n    if color.lower() == word.lower():\n        return \"f\"\n    return \"j\"\n\n\ncorrect_key = FunctionVariable(\"correct_key\", correct_key_fct, [color, word])\n\nlast_correct = DataVariable(\"correct\", 1)\n\nfeedback_text = FunctionVariable(\n    \"feedback_text\",\n    lambda lc: \"Correct!\" if lc else \"False!\",\n    [last_correct],\n)\n\nfixation = Text(800, \"+\")\nso_s = Text(so_s_duration)\nstroop = Text(2000, word, color, choices=[\"f\", \"j\"], correct_key=correct_key)\nfeedback = Text(800, feedback_text)\nso_f = Text(so_f_duration)\n\n# BLOCK DESIGN\n\nblock = Block([fixation, so_s, stroop, feedback, so_f], timeline)\n\n# Create an image of the stimuli sequence of the block\nblock.to_image(\n    \"stroop.png\",\n    data=[None, None, {\"correct\": True}, None, None],\n    zoom_factor=3,\n    sequence=True,\n)\n\n# Create an HTML file of the experiment\nexperiment = Experiment([block])\nexperiment.to_html(\"feedback_manual.html\")\n"
    },
    {
      "filename": "text.py",
      "relpath": "docs/Stimuli/text/text.py",
      "code": "\"\"\"\nThe text 'press a or b or wait' is shown in pink for 2000ms. The allowed responses are 'a' and 'b'.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Text\n\n# EVENT SEQUENCE\n\ntext = Text(\n    duration=2000, text=\"press a or b or wait\", color=\"pink\", choices=[\"a\", \"b\"]\n)\n\n\nevent_sequence = [text]\n\n# BLOCK DESIGN\n\nblock = Block(event_sequence)\nexperiment = Experiment([block])\n\nexperiment.to_html(\"text.html\")\n"
    }
  ],
  "blank": [],
  "fixation": [],
  "feedback": [],
  "flanker": [],
  "symbol": [],
  "image": [
    {
      "filename": "image.py",
      "relpath": "docs/Stimuli/image/image.py",
      "code": "from sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Image\n\nstim_1 = Image(\n    stimulus=\"https://media.istockphoto.com/id/120492078/photo/\"\n    \"banana.jpg?s=1024x1024&w=is&k=20&c=M9KLVNgqLft_btWgSu0iZAmdv2asI11Qel-6fsQK140=\",\n    choices=[\" \"],\n)\n\nblock = Block([stim_1])\n\n# Create an image of the stimulus\nblock.to_image(\"./\", data=None, sequence=False, timeline_idx=\"random\", zoom_factor=1)\n\n# Create an HTML file of the experiment\nexperiment = Experiment([block])\nexperiment.to_html(\"image.html\")\n"
    },
    {
      "filename": "image_language.py",
      "relpath": "docs/Stimuli/image/image_language.py",
      "code": "\"\"\"\nThis script demonstrates how to use the `run_on_language` method to run an experiment\nwith image stimuli.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Image\n\nstim_1 = Image(\n    stimulus=\"https://media.istockphoto.com/id/120492078/photo/\"\n    \"banana.jpg?s=1024x1024&w=is&k=20&c=M9KLVNgqLft_btWgSu0iZAmdv2asI11Qel-6fsQK140=\",\n    choices=[\" \"],\n)\n\nblock = Block([stim_1])\nexperiment = Experiment([block])\n\n# To make this work, there is a file called image_prompts.json in the same directory as this\n# script with the following content:\n# {\n# \"https://media.istockphoto.com/id/120492078/photo/banana.jpg?s=1024x1024&w=is&k=20&c=M9KLVNgqLft_btWgSu0iZAmdv2asI11Qel-6fsQK140=\": \"You see a picture of a banana.\"   # noqa: E501\n# }\n\nexperiment.run_on_language()\n"
    }
  ],
  "randomobjectkinematogram": [
    {
      "filename": "rok.py",
      "relpath": "docs/Stimuli/rok/rok.py",
      "code": "\"\"\"\nThe rok presents orientated objects (triangles).\n50% of them move in an angle of 100deg and 50% randomly.\n90% of them are orientated to the right and 10% randomly.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import ROK\n\n# EVENT SEQUENCE\n\nrok = ROK(\n    duration=3000,\n    number_of_oobs=500,\n    coherent_movement_direction=100,\n    coherent_orientation=0,\n    coherence_movement=50,\n    coherence_orientation=90,\n    movement_speed=10,\n)\n\nevent_sequence = [rok]\n\n# BLOCK DESIGN\n\nblock = Block(event_sequence)\n\n# Create an image of the stimuli\nblock.to_image(\"./\", data=None, sequence=False, timeline_idx=\"random\", zoom_factor=1)\n\n# Create an HTML file of the experiment\nexperiment = Experiment([block])\nexperiment.to_html(\"rok.html\")\n"
    }
  ],
  "randomdotpatterns": [
    {
      "filename": "psychophysics.py",
      "relpath": "docs/Stimuli/rdp/psychophysics.py",
      "code": "# -*- coding: utf-8 -*-\n\"\"\" Weber Fechner\n\nAn example for Weber Fechner.  Here, we have a simple stimulus timeline:\n[fixation, blank, rdp, blank, feedback]\n\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Blank, Feedback, Fixation, RandomDotPatterns\nfrom sweetbean.variable import TimelineVariable\n\ntimeline = [\n    {\"S1\": 40, \"S2\": 70, \"correct_key\": \"y\"},\n    {\"S1\": 70, \"S2\": 70, \"correct_key\": \"n\"},\n    {\"S1\": 70, \"S2\": 40, \"correct_key\": \"y\"},\n    {\"S1\": 70, \"S2\": 70, \"correct_key\": \"n\"},\n    {\"S1\": 40, \"S2\": 70, \"correct_key\": \"y\"},\n    {\"S1\": 70, \"S2\": 40, \"correct_key\": \"y\"},\n    {\"S1\": 40, \"S2\": 40, \"correct_key\": \"n\"},\n    {\"S1\": 40, \"S2\": 40, \"correct_key\": \"n\"},\n    {\"S1\": 40, \"S2\": 40, \"correct_key\": \"n\"},\n    {\"S1\": 70, \"S2\": 40, \"correct_key\": \"y\"},\n]\n\nfixation = Fixation(800)\n\nblank_1 = Blank(400)\nblank_2 = Blank(1000)\n\ns1 = TimelineVariable(\"S1\")\ns2 = TimelineVariable(\"S2\")\ncorrect_key = TimelineVariable(\"correct_key\")\n\n# We can use these variables in the stimuli declaration:\n\nrdp = RandomDotPatterns(\n    duration=1000,\n    number_of_oobs=[s1, s2],\n    number_of_apertures=2,\n    choices=[\"y\", \"n\"],\n    correct_key=correct_key,\n)\n\n\nfeedback = Feedback(500, window=2)\n\nevent_sequence = [fixation, blank_1, rdp, blank_2, feedback]\n\nblock = Block(event_sequence, timeline)\n\n# Create an image of the stimuli sequence of the block\nblock.to_image(\n    \"weber_fechner.png\",\n    data=[None, None, {\"correct\": True}, None, None],\n    zoom_factor=[3, 3, 1, 3, 3],\n    sequence=True,\n)\n\n# Create an HTML file of the experiment\nexperiment = Experiment([block])\nexperiment.to_html(\"weber_fechner.html\")\n"
    }
  ],
  "rsvp": [
    {
      "filename": "rsvp.py",
      "relpath": "docs/Stimuli/rsvp/rsvp.py",
      "code": "from sweetbean.block import Block\nfrom sweetbean.experiment import Experiment\nfrom sweetbean.stimulus import RSVP, Feedback, Text\nfrom sweetbean.variable import TimelineVariable\n\ntimeline = [\n    {\n        \"left_stream\": [\"O\", \"O\", \"Q\", \"Q\", \"O\", \"Q\"],\n        \"right_stream\": [\"1\", \"1\", \"2\", \"3\", \"4\", \"5\"],\n        \"left_target_index\": 4,  # zero-based index\n        \"left_target_shape\": \"circle\",\n        \"right_target_index\": 4,\n        \"right_target_shape\": \"square\",\n        \"correct_key\": \"o\",\n    },\n    {\n        \"left_stream\": [\"O\", \"Q\", \"Q\", \"O\", \"Q\", \"O\"],\n        \"right_stream\": [\"1\", \"1\", \"2\", \"3\", \"4\", \"5\"],\n        \"left_target_index\": 2,\n        \"left_target_shape\": \"circle\",\n        \"right_target_index\": 2,\n        \"right_target_shape\": \"square\",\n        \"correct_key\": \"q\",\n    },\n    {\n        \"left_stream\": [\"O\", \"O\", \"Q\", \"O\", \"O\", \"O\"],\n        \"right_stream\": [\"1\", \"1\", \"2\", \"3\", \"4\", \"5\"],\n        \"left_target_index\": 2,\n        \"left_target_shape\": \"square\",\n        \"right_target_index\": 2,\n        \"right_target_shape\": \"circle\",\n        \"correct_key\": \"2\",\n    },\n]\n\nrsvp = RSVP(\n    streams=[\n        {\"id\": \"left\", \"items\": TimelineVariable(\"left_stream\")},\n        {\"id\": \"right\", \"items\": TimelineVariable(\"right_stream\")},\n    ],\n    stimulus_duration=200,\n    isi=40,\n    targets=[\n        {\n            \"stream_id\": \"left\",\n            \"index\": TimelineVariable(\"left_target_index\"),\n            \"shape\": TimelineVariable(\"left_target_shape\"),\n        },\n        {\n            \"stream_id\": \"right\",\n            \"index\": TimelineVariable(\"right_target_index\"),\n            \"shape\": TimelineVariable(\"right_target_shape\"),\n        },\n    ],\n)\nresponse_window = Text(\n    text=\"What was the circled symbol?\",\n    choices=[\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n        \"g\",\n        \"h\",\n        \"i\",\n        \"j\",\n        \"k\",\n        \"l\",\n        \"m\",\n        \"n\",\n        \"o\",\n        \"p\",\n        \"q\",\n        \"r\",\n        \"s\",\n        \"t\",\n        \"u\",\n        \"v\",\n        \"w\",\n        \"x\",\n        \"y\",\n        \"z\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"0\",\n    ],\n    correct_key=TimelineVariable(\"correct_key\"),\n)\n\nfeedback = Feedback(duration=300)\n\nstimulus_sequence = [rsvp, response_window, feedback]\n\nblock = Block(stimulus_sequence, timeline=timeline)\nexp = Experiment([block])\nexp.to_html(\"rsvp.html\")\n"
    }
  ],
  "textsurvey": [
    {
      "filename": "text_survey.py",
      "relpath": "docs/Stimuli/survey/text_survey.py",
      "code": "\"\"\"\nAfter the participant is greeted with 'Welcome! We show a survey. Press SPACE to continue' until\nthey press the spacebar, they are asked free-from questions about how old they are, their gender,\nand their handedness.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import Text, TextSurvey\n\n# EVENT SEQUENCE\n\nstim_1 = Text(\n    text=\"Welcome! We show a survey. Press SPACE to continue\",\n    choices=[\" \"],\n)\n\nstim_2 = TextSurvey(\n    questions=[\"How old are you?\", \"What is your gender?\", \"What is your handedness?\"]\n)\n\nevent_sequence = [stim_1, stim_2]\n\n# BLOCK DESIGN\n\nblock = Block(event_sequence)\nexperiment = Experiment([block])\nexperiment.to_html(\"text_survey.html\")\n"
    }
  ],
  "multichoicesurvey": [
    {
      "filename": "multiple_choice.py",
      "relpath": "docs/Stimuli/survey/multiple_choice.py",
      "code": "\"\"\"\nAfter the participant is greeted with 'Welcome! We show a survey. Press SPACE to continue' until\nthey press the spacebar, they are asked two multiple-choice questions. One is about how they are,\nwhich they can rate as bad, good, or fine. The other is about their handedness.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import MultiChoiceSurvey, Text\n\n# EVENT SEQUENCE\n\nstim_1 = Text(\n    text=\"Welcome! We show a survey. Press SPACE to continue\",\n    choices=[\" \"],\n)\n\nstim_2 = MultiChoiceSurvey(\n    questions=[\n        {\"prompt\": \"How are you?\", \"options\": [\"bad\", \"good\", \"fine\"]},\n        {\n            \"prompt\": \"What is your handedness?\",\n            \"options\": [\"left\", \"right\", \"other\", \"prefer not to say\"],\n        },\n    ]\n)\n\nevent_sequence = [stim_1, stim_2]\n\n# BLOCK DESIGN\n\nblock = Block(event_sequence)\nexperiment = Experiment([block])\nexperiment.to_html(\"multi_choice.html\")\n"
    }
  ],
  "likertsurvey": [
    {
      "filename": "likert.py",
      "relpath": "docs/Stimuli/survey/likert.py",
      "code": "\"\"\"\nA welcoming text the participant is shown until the participant presses the spacebar. The text says,\n'Welcome! We show a survey. Press SPACE to continue'. This is followed by a survey with two\nquestions that the participant is supposed to answer on a likert scale. The first question is\n'How are you feeling?' and the participant is supposed to rate their feeling on a scale from\n-2 to 2 with 5 levels. The second question is 'Do you like this tool?' on a scale from 1 to 3.\nThen, the participant is supposed to rate five animals on their cuteness from 1 to 5.\nThe animals are a bunny, a shark, a spider, a cat, and a dog.\n\"\"\"\n\nfrom sweetbean import Block, Experiment\nfrom sweetbean.stimulus import LikertSurvey, Text\n\n# EVENT SEQUENCE\n\nstim_1 = Text(\n    text=\"Welcome! We show a survey. Press SPACE to continue\",\n    choices=[\" \"],\n)\n\nstim_2 = LikertSurvey(\n    questions=[\n        {\"prompt\": \"How are you feeling?\", \"labels\": [-2, -1, 0, 1, 2]},\n        {\"prompt\": \"Do you like this tool?\", \"labels\": [0, 1, 3]},\n    ]\n)\n\nstim_3 = Text(\n    text=\"Rate the following animals on a scale from 1-5 on their cuteness.\",\n    choices=[\" \"],\n)\n\nstim_4 = LikertSurvey.from_scale(\n    prompts=[\"bunny\", \"shark\", \"spider\", \"cat\", \"dog\"], scale=[1, 2, 3, 4, 5]\n)\n\nevent_sequence = [stim_1, stim_2, stim_3, stim_4]\n\n# BLOCK DESIGN\n\nblock = Block(event_sequence)\nexperiment = Experiment([block])\nexperiment.to_html(\"likert.html\")\n"
    }
  ],
  "video": []
}